name: Lint

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clang-tidy:
    name: clang-tidy
    runs-on: ubuntu-22.04
    env:
      LLVM_VERSION: '16'
      AMREX_HOME: ${{ github.workspace }}/amrex
      BINARYBH_EXAMPLE_DIR: ${{ github.workspace }}/Examples/BinaryBH
      TMP_BUILD_DIR: ${{ github.workspace }}/tmp_build_dir

    steps:
    - name: Checkout GRAMReX
      uses: actions/checkout@v3
      with:
        clean: false

    - name: Checkout AMReX
      uses: actions/checkout@v3
      with:
        repository: AMReX-Codes/amrex
        path: amrex
        clean: false

      # The default Ubuntu package repos don't always have the latest LLVM
      # releases so use the LLVM PPA described at https://apt.llvm.org
    - name: Add LLVM PPA to package manager
      run: |
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        sudo add-apt-repository --no-update "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-${LLVM_VERSION} main"

    - name: Update package manager database
      id: update-database
      continue-on-error: true
      run: sudo apt-get update

      # This is quite slow so only do this if the previous command fails
    - name: Update package repository mirrors if necessary
      if: steps.update-database.outcome == 'failure'
      run: |
        sudo gem install apt-spy2
        sudo apt-spy2 fix --commit --launchpad --country=US
        sudo apt-get update

    - name: Install MPICH and LLVM v16 packages
      run: |
        sudo apt-get -y --no-install-recommends install \
        libmpich-dev \
        clang-${LLVM_VERSION} \
        clang-tools-${LLVM_VERSION} \
        clang-tidy-${LLVM_VERSION} \
        clang-format-${LLVM_VERSION}

    - name: Generate config and Determine compiler flags
      id: flags
      run: |
        make COMP=llvm AMReX_Config.H
        echo "mpiflags=$(make print-mpicxx_include_dirs COMP=llvm | tail -n 3 | head -n 1 | sed 's/^.*\ is\ //')" >> $GITHUB_OUTPUT
        echo "cxxflags=$(make print-CXXFLAGS COMP=llvm | tail -n 3 | head -n 1 | sed 's/^.*\ is\ //')" >> $GITHUB_OUTPUT
        echo "cppflags=$(make print-CPPFLAGS COMP=llvm | tail -n 3 | head -n 1 | sed 's/^.*\ is\ //')" >> $GITHUB_OUTPUT
        echo "includes=$(make print-includes COMP=llvm | tail -n 3 | head -n 1 | sed 's/^.*\ is\ //')" >> $GITHUB_OUTPUT
      working-directory: ${{ env.BINARYBH_EXAMPLE_DIR }}

    - name: Run clang-tidy on modified files
      uses: cpp-linter/cpp-linter-action@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        style: ''
        tidy-checks: ''
        version: ${{ env.LLVM_VERSION }}
        files-changed-only: true
        lines-changed-only: 'false'
        extra-args: ${{ join(steps.flags.outputs.*,' ') }}

